
<style>
    /* General Styles */
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f9f9f9;
    }

    .container {
      margin: 20px auto;
      padding: 20px;
      max-width: 800px;
      background-color: #fff;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      border-radius: 8px;
    }

    h1 {
      text-align: center;
      color: #333;
    }

    /* Table Styles */
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }

    thead tr {
      background-color: #007bff;
      color: white;
    }

    th, td {
      padding: 12px;
      text-align: left;
      border-bottom: 1px solid #ddd;
    }

    tr:hover {
      background-color: #f1f1f1;
    }

    button {
      padding: 8px 12px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    .btn-danger {
      background-color: #e74c3c;
      color: white;
    }

    .btn-danger:hover {
      background-color: #c0392b;
    }

    .btn-secondary {
      background-color: #7f8c8d;
      color: white;
    }

    .btn-secondary:hover {
      background-color: #95a5a6;
    }

    /* Modal Styles */
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      justify-content: center;
      align-items: center;
    }

    .modal-content {
      background: #fff;
      padding: 20px;
      border-radius: 8px;
      text-align: center;
      max-width: 400px;
      width: 80%;
    }

    .close-btn {
      position: absolute;
      top: 10px;
      right: 15px;
      font-size: 20px;
      cursor: pointer;
    }
  </style>

  <div class="container">
    <h1>My Applications</h1>
    <table id="applicationsTable">
      <thead>
        <tr>
          <th>#</th>
          <th>Name</th>
          <th>Email</th>
          <th>Phone</th>
          <th>Action</th>
        </tr>
      </thead>
      <tbody>
        <!-- Dynamic rows will be added here -->
      </tbody>
    </table>
  </div>

  <!-- Delete Confirmation Modal -->
  <div id="deleteModal" class="modal">
    <div class="modal-content">
      <span class="close-btn">&times;</span>
      <h2>Confirm Deletion</h2>
      <p>Are you sure you want to delete this application?</p>
      <button id="confirmDelete" class="btn-danger">Yes, Delete</button>
      <button id="cancelDelete" class="btn-secondary">Cancel</button>
    </div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const applicationsTable = document.querySelector("#applicationsTable tbody");
      const deleteModal = document.getElementById("deleteModal");
      const confirmDelete = document.getElementById("confirmDelete");
      const cancelDelete = document.getElementById("cancelDelete");
      const closeModal = document.querySelector(".close-btn");
      let deleteApplicationId = null;

      // Fetch and display applications
      async function fetchApplications() {
        try {
          const response = await fetch("/application/jobseeker/getall", {
            method: "GET",
            headers: { Authorization: `Bearer ${localStorage.getItem("token")}` },
          });
          const data = await response.json();
          if (data.success) {
            populateApplicationsTable(data.applications);
          } else {
            alert("Failed to fetch applications");
          }
        } catch (err) {
          console.error("Error fetching applications:", err);
        }
      }

      // Populate table with data
      function populateApplicationsTable(applications) {
        applicationsTable.innerHTML = ""; // Clear table
        applications.forEach((app, index) => {
          const row = document.createElement("tr");
          row.innerHTML = `
            <td>${index + 1}</td>
            <td>${app.name}</td>
            <td>${app.email}</td>
            <td>${app.phone}</td>
            <td><button class="btn-danger" data-id="${app._id}">Delete</button></td>
          `;
          applicationsTable.appendChild(row);
        });

        // Add event listeners to delete buttons
        document.querySelectorAll(".btn-danger").forEach((button) => {
          button.addEventListener("click", () => {
            deleteApplicationId = button.getAttribute("data-id");
            showModal();
          });
        });
      }

      // Show modal
      function showModal() {
        deleteModal.style.display = "flex";
      }

      // Hide modal
      function hideModal() {
        deleteModal.style.display = "none";
      }

      // Confirm delete
      confirmDelete.addEventListener("click", async () => {
        try {
          const response = await fetch(`/application/delete/${deleteApplicationId}`, {
            method: "DELETE",
            headers: { Authorization: `Bearer ${localStorage.getItem("token")}` },
          });
          const data = await response.json();
          if (data.success) {
            alert("Application deleted successfully!");
            hideModal();
            fetchApplications(); // Refresh applications
          } else {
            alert(data.message || "Failed to delete application");
          }
        } catch (err) {
          console.error("Error deleting application:", err);
        }
      });

      // Cancel delete
      cancelDelete.addEventListener("click", hideModal);
      closeModal.addEventListener("click", hideModal);

      // Fetch applications on page load
      fetchApplications();
    });
  </script>

