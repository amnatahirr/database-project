<style>
  .h2 {
      text-align: center;
      margin: 0 auto; /* Center horizontally */
      margin-bottom: 2rem; /* Keep the bottom margin for spacing */
  }
  
  .table-container {
      background-color: #1A1A1A;
      border-radius: 8px;
      padding: 1.5rem;
      overflow-x: auto;
  }
  
  table {
      width: 100%;
      border-collapse: collapse;
     
  }
  
  th, td {
      padding: 1rem;
      text-align: left;
      border-bottom: 1px solid #eeeeee; /* Matching border color */

      /* border-color: antiquewhite; */
  }
  
  th {
      background-color:#007BFF;
      font-weight: bold;
  }
  
  tr:hover {
      background-color: #2A2A2A;
  }
  
  .delete-btn {
      background-color: #DC3545;
      color: #FFFFFF;
      border: none;
      padding: 0.5rem 1rem;
      border-radius: 4px;
      cursor: pointer;
  }
  
  .delete-btn:hover {
      background-color: #C82333;
  }
  .error {
    text-align: center;
    color: red;
    margin-top: 20px;
  }

  .loading {
    text-align: center;
    color: #007BFF;
    font-size: 18px;
  }
</style>
<div class="container">
  <br><br>
  <h2 class="h2">Applications for Your Posted Jobs</h2>
  <div class="table-container">
    <table id="applicationsTable" style="display: none;">
      <thead>
        <tr>
          <th>Job Title</th>
          <th>Applicant Name</th>
          <th>Status</th>
          <th>Date Applied</th>
        </tr>
      </thead>
      <tbody id="applicationsBody"></tbody>
    </table>
  </div>
  <div id="loading" class="loading">Loading applications...</div>
  <div id="error" class="error" style="display: none;">Failed to load applications. Please try again.</div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', async () => {
    const table = document.getElementById('applicationsTable');
    const tableBody = document.getElementById('applicationsBody');
    const loadingIndicator = document.getElementById('loading');
    const errorIndicator = document.getElementById('error');

    try {
      const token = localStorage.getItem('token'); // Assume JWT is stored here
      const response = await fetch('/application/employer/getall', {
        method: 'GET',
        headers: { 'Authorization': `Bearer ${token}` }
      });

      const data = await response.json();

      if (!response.ok) throw new Error(data.message || "Unable to fetch applications.");

      loadingIndicator.style.display = 'none';

      if (data.applications.length === 0) {
        tableBody.innerHTML = `<tr><td colspan="4" style="text-align: center;">No applications found.</td></tr>`;
      } else {
        data.applications.forEach(application => {
          const job = application.jobId;

          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${job?.jobTitle || 'N/A'}</td>
            <td>${application.name || 'N/A'}</td>
            <td>${application.status || 'Pending'}</td>
            <td>${new Date(application.createdAt).toLocaleDateString()}</td>
          `;
          tableBody.appendChild(row);
        });
      }

      table.style.display = 'table';
    } catch (error) {
      console.error("Error fetching applications:", error);
      loadingIndicator.style.display = 'none';
      errorIndicator.style.display = 'block';
    }
  });
</script>
