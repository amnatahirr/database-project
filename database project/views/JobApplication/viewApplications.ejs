

<style>
    *{
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f9f9f9;
    }

    .container {
      max-width: 1200px;
      margin: 20px auto;
      padding: 20px;
      background: #fff;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      border-radius: 8px;
    }

    h1 {
      text-align: center;
      color: #333;
    }

    .table-container {
      overflow-x: auto;
      margin-top: 20px;
    }

    table {
      width: 100%;
      border-collapse: collapse;
    }

    th, td {
      padding: 12px 16px;
      border: 1px solid #ddd;
      text-align: left;
    }

    th {
      background-color: #007BFF;
      color: white;
    }

    tr:nth-child(even) {
      background-color: #f2f2f2;
    }

    .error {
      text-align: center;
      color: red;
      margin-top: 20px;
    }

    .loading {
      text-align: center;
      color: #007BFF;
      font-size: 18px;
    }

    .delete-btn {
  background-color: #dc3545;
  color: white;
  border: none;
  padding: 8px 12px;
  border-radius: 4px;
  cursor: pointer;
}

.delete-btn:hover {
  background-color: #c82333;
}

  </style>

  <div class=container">
    <h1>Your Job Applications</h1>
    <div class="table-container">
      <table id="applicationsTable" style="display: none;">
        <thead>
          <tr>
            <th>Job Title</th>
            <th>Company Name</th>
            <th>Status</th>
            <th>Date Applied</th>
          </tr>
        </thead>
        <tbody id="applicationsBody"></tbody>
      </table>
    </div>
    <div id="loading" class="loading">Loading applications...</div>
    <div id="error" class="error" style="display: none;">Failed to load applications. Please try again.</div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', async () => {
      const table = document.getElementById('applicationsTable');
      const tableBody = document.getElementById('applicationsBody');
      const loadingIndicator = document.getElementById('loading');
      const errorIndicator = document.getElementById('error');
  
      try {
        const token = localStorage.getItem('token'); // Assume JWT is stored here
        const response = await fetch('/application/jobseeker/getall', {
          method: 'GET',
          headers: { 'Authorization': `Bearer ${token}` }
        });
        const data = await response.json();
  
        if (!response.ok) throw new Error(data.message || "Unable to fetch applications.");
  
        loadingIndicator.style.display = 'none';
  
        if (data.applications.length === 0) {
          tableBody.innerHTML = `<tr><td colspan="5" style="text-align: center;">No applications found.</td></tr>`;
        } else {
          data.applications.forEach(application => {
            const row = document.createElement('tr');
            row.innerHTML = `
              <td>${application.jobTitle || 'N/A'}</td>
              <td>${application.companyName || 'N/A'}</td>
              <td>${application.status || 'Pending'}</td>
              <td>${new Date(application.createdAt).toLocaleDateString()}</td>
              <td><button class="delete-btn" data-id="${application._id}">Delete</button></td>
            `;
            tableBody.appendChild(row);
          });
        }
  
        table.style.display = 'table';
  
        // Add event listeners to all delete buttons
        document.querySelectorAll('.delete-btn').forEach(button => {
          button.addEventListener('click', async (event) => {
            const applicationId = event.target.getAttribute('data-id');
            if (confirm("Are you sure you want to delete this application?")) {
              await deleteApplication(applicationId);
            }
          });
        });
      } catch (error) {
        console.error("Error fetching applications:", error);
        loadingIndicator.style.display = 'none';
        errorIndicator.style.display = 'block';
      }
    });
  
    async function deleteApplication(applicationId) {
      try {
        const token = localStorage.getItem('token');
        const response = await fetch(`/application/delete/${applicationId}`, {
          method: 'DELETE',
          headers: { 'Authorization': `Bearer ${token}` }
        });
  
        const data = await response.json();
  
        if (!response.ok) throw new Error(data.message || "Unable to delete application.");
  
        alert(data.message);
        location.reload(); // Reload the page to update the table
      } catch (error) {
        console.error("Error deleting application:", error);
        alert("Failed to delete application. Please try again.");
      }
    }
  </script>
  


